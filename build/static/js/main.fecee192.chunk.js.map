{"version":3,"sources":["_actionTypes/index.js","_constants/index.js","_reducers/visibilityFilter.js","_reducers/todos.js","_reducers/index.js","store.js","_actions/index.js","_components/AddTodo.js","_components/Todo.js","_selectors/index.js","_components/TodoList.js","_components/VisibilityFilters.js","App.js","reportWebVitals.js","index.js"],"names":["ADD_TODO","TOGGLE_TODO","SET_FILTER","VISIBILITY_FILTERS","ALL","COMPLETED","INCOMPLETE","initialState","visibilityFilter","state","action","type","payload","filter","allIds","byIds","combineReducers","todos","id","content","completed","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","nextTodoId","AddTodo","props","updateInput","input","setState","handleAddTodo","addTodo","onChange","e","target","value","this","className","onClick","React","Component","connect","toggleTodo","todo","cx","getTodosState","store","getTodos","getTodoList","map","getTodoById","allTodos","getTodosByVisibilityFilter","length","index","activeFilter","setFilter","Object","keys","filterKey","currentFilter","TodoApp","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fecee192.chunk.js","sourcesContent":["export const ADD_TODO = \"ADD_TODO\";\nexport const TOGGLE_TODO = \"TOGGLE_TODO\";\nexport const SET_FILTER = \"SET_FILTER\";\n","export const VISIBILITY_FILTERS = {\n    ALL: \"all\",\n    COMPLETED: \"completed\",\n    INCOMPLETE: \"incomplete\"\n};\n","import { SET_FILTER } from \"../_actionTypes\";\nimport { VISIBILITY_FILTERS } from \"../_constants\";\n\nconst initialState = VISIBILITY_FILTERS.ALL;\n\nconst visibilityFilter = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_FILTER: {\n            return action.payload.filter;\n        }\n        default: {\n            return state;\n        }\n    }\n};\n\nexport default visibilityFilter;\n","import { ADD_TODO, TOGGLE_TODO } from \"../_actionTypes\";\n\nconst initialState = {\n    allIds: [],\n    byIds: {}\n};\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case ADD_TODO: {\n            const { id, content } = action.payload;\n            return {\n                ...state,\n                allIds: [...state.allIds, id],\n                byIds: {\n                    ...state.byIds,\n                    [id]: {\n                        content,\n                        completed: false\n                    }\n                }\n            };\n        }\n        case TOGGLE_TODO: {\n            const { id } = action.payload;\n            return {\n                ...state,\n                byIds: {\n                    ...state.byIds,\n                    [id]: {\n                        ...state.byIds[id],\n                        completed: !state.byIds[id].completed\n                    }\n                }\n            };\n        }\n        default:\n            return state;\n    }\n}\n","import { combineReducers } from \"redux\";\nimport visibilityFilter from \"./visibilityFilter\";\nimport todos from \"./todos\";\n\nexport default combineReducers({ todos, visibilityFilter });\n","import { createStore } from \"redux\";\nimport rootReducer from \"./_reducers\";\n//https://github.com/zalmoxisus/redux-devtools-extension#usage\nexport default createStore(\n    rootReducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);","import { ADD_TODO, TOGGLE_TODO, SET_FILTER } from \"../_actionTypes\";\n\nlet nextTodoId = 0;\n\nexport const addTodo = content => ({\n    type: ADD_TODO,\n    payload: {\n        id: ++nextTodoId,\n        content\n    }\n});\n\nexport const toggleTodo = id => ({\n    type: TOGGLE_TODO,\n    payload: { id }\n});\n\nexport const setFilter = filter => ({ type: SET_FILTER, payload: { filter } });\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { addTodo } from \"../_actions\";\n\nclass AddTodo extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { input: \"\" };\n    }\n\n    updateInput = input => {\n        this.setState({ input });\n    };\n\n    handleAddTodo = () => {\n        this.props.addTodo(this.state.input);\n        this.setState({ input: \"\" });\n    };\n\n    render() {\n        return (\n            <div>\n            <input\n        onChange={e => this.updateInput(e.target.value)}\n        value={this.state.input}\n        />\n        <button className=\"add-todo\" onClick={this.handleAddTodo}>\n            Add Todo\n        </button>\n        </div>\n    );\n    }\n}\n\nexport default connect(\n    null,\n    { addTodo }\n)(AddTodo);\n// export default AddTodo;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport cx from \"classnames\";\nimport { toggleTodo } from \"../_actions\";\n\nconst Todo = ({ todo, toggleTodo }) => (\n    <li className=\"todo-item\" onClick={() => toggleTodo(todo.id)}>\n{todo && todo.completed ? \"ðŸ‘Œ\" : \"ðŸ‘‹\"}{\" \"}\n<span\nclassName={cx(\n    \"todo-item__text\",\n    todo && todo.completed && \"todo-item__text--completed\"\n)}\n>\n{todo.content}\n</span>\n</li>\n);\n\n// export default Todo;\nexport default connect(\n    null,\n    { toggleTodo }\n)(Todo);\n","import { VISIBILITY_FILTERS } from \"../_constants\";\n\nexport const getTodosState = store => store.todos;\n\nexport const getTodoList = store =>\n    getTodosState(store) ? getTodosState(store).allIds : [];\n\nexport const getTodoById = (store, id) =>\n    getTodosState(store) ? { ...getTodosState(store).byIds[id], id } : {};\n\n/**\n * example of a slightly more complex selector\n * select from store combining information from multiple reducers\n */\nexport const getTodos = store =>\n    getTodoList(store).map(id => getTodoById(store, id));\n\nexport const getTodosByVisibilityFilter = (store, visibilityFilter) => {\n    const allTodos = getTodos(store);\n    switch (visibilityFilter) {\n        case VISIBILITY_FILTERS.COMPLETED:\n            return allTodos.filter(todo => todo.completed);\n        case VISIBILITY_FILTERS.INCOMPLETE:\n            return allTodos.filter(todo => !todo.completed);\n        case VISIBILITY_FILTERS.ALL:\n        default:\n            return allTodos;\n    }\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Todo from \"./Todo\";\n// import { getTodos } from \"../redux/selectors\";\nimport { getTodosByVisibilityFilter } from \"../_selectors\";\nimport { VISIBILITY_FILTERS } from \"../_constants\";\n\nconst TodoList = ({ todos }) => (\n    <ul className=\"todo-list\">\n{todos && todos.length\n    ? todos.map((todo, index) => {\n        return <Todo key={`todo-${todo.id}`} todo={todo} />;\n    })\n    : \"No todos, yay!\"}\n</ul>\n);\n\n// const mapStateToProps = state => {\n//   const { byIds, allIds } = state.todos || {};\n//   const todos =\n//     allIds && state.todos.allIds.length\n//       ? allIds.map(id => (byIds ? { ...byIds[id], id } : null))\n//       : null;\n//   return { todos };\n// };\n\nconst mapStateToProps = state => {\n    const { visibilityFilter } = state;\n    const todos = getTodosByVisibilityFilter(state, visibilityFilter);\n    return { todos };\n    //   const allTodos = getTodos(state);\n    //   return {\n    //     todos:\n    //       visibilityFilter === VISIBILITY_FILTERS.ALL\n    //         ? allTodos\n    //         : visibilityFilter === VISIBILITY_FILTERS.COMPLETED\n    //           ? allTodos.filter(todo => todo.completed)\n    //           : allTodos.filter(todo => !todo.completed)\n    //   };\n};\n// export default TodoList;\nexport default connect(mapStateToProps)(TodoList);\n","import React from \"react\";\nimport cx from \"classnames\";\nimport { connect } from \"react-redux\";\nimport { setFilter } from \"../_actions\";\nimport { VISIBILITY_FILTERS } from \"../_constants\";\n\nconst VisibilityFilters = ({ activeFilter, setFilter }) => {\n    return (\n        <div className=\"visibility-filters\">\n        {Object.keys(VISIBILITY_FILTERS).map(filterKey => {\n                const currentFilter = VISIBILITY_FILTERS[filterKey];\n                return (\n                    <span\n                key={`visibility-filter-${currentFilter}`}\n                className={cx(\n                    \"filter\",\n                    currentFilter === activeFilter && \"filter--active\"\n            )}\n                onClick={() => {\n                    setFilter(currentFilter);\n                }}\n            >\n                {currentFilter}\n            </span>\n            );\n            })}\n        </div>\n);\n};\n\nconst mapStateToProps = state => {\n    return { activeFilter: state.visibilityFilter };\n};\n// export default VisibilityFilters;\nexport default connect(\n    mapStateToProps,\n    { setFilter }\n)(VisibilityFilters);\n","import React from \"react\";\nimport AddTodo from \"./_components/AddTodo\";\nimport TodoList from \"./_components/TodoList\";\nimport VisibilityFilters from \"./_components/VisibilityFilters\";\nimport \"./styles.css\";\n\nexport default function TodoApp() {\n    return (\n        <div className=\"todo-app\">\n            <h1>Todo List</h1>\n            <AddTodo />\n            <TodoList />\n            <VisibilityFilters />\n        </div>\n    );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport store from './store';\n\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}